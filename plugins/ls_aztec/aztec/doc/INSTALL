To make the Aztec library, you must:

  1) Obtain LAPACK, BLAS, and Y12M software from the netlib mail-server.

     a) TYPE ===> mail netlib@ornl.gov < netlib_mail

        12 netlib messages will be sent to you in response to this request.

     b) STORE the netlib messages in the files: file_a, file_b, ... ,
        file_k, file_l (in any order).

     c) TYPE ===> process_netlib

        NOTE: In most cases you do not need to strip off mail headers
        before running 'process_netlib'. However, it may be necessary
        to remove one or two lines of information appended to the
        messages by some mail programs.

        You can now remove the 'file_*' files.

  2) Compile the library.

     a) TYPE ===> cd lib; make "MACHINE=xxxx"   "COMM=yyyy"

        where xxxx specifies the machine and can be either SUN4, SGI,
	SGIM4, I860, DEC, SUNMOS, or NCUBE and yyyy specifies the
	message communication system and can be either SERIAL, I860,
	SUNMOS, NCUBE, or MPI.

        Ex 1: Paragon with MPI:
        =====
             TYPE ===> make "MACHINE=I860"   "COMM=MPI"

        Ex 2: Paragon with native communication:
        =====
             TYPE ===> make "MACHINE=I860"   "COMM=I860"

        Ex 3: single sun workstation
        =====
             TYPE ===> make "MACHINE=SUN4"   "COMM=SERIAL"


        NOTE: On some machines 'make' will not function properly and
        'gmake' must be used. If you do not have 'gmake', you can
        create a makefile that works properly with 'make' by explicitly
        putting in the machine and communication information:

        Ex 4: single sgi workstation
        =====
             TYPE ===> cd lib
                       cat Makefile | sed 's/$(MACHINE)/SGI/g' > temp
                       cat temp     | sed 's/$(COMM)/SERIAL/g' > Makefile
                       rm temp; make

        NOTE: If you are using MPI, Aztec will look for the file "mpi.h"
        and so you may need to modify the makefile to tell the compiler 
        where to find this file. This "mpi.h" should be the same file used
        when making an application (e.g. az_main.c) and should correspond
        to the mpi library that is used "libmpi.a".


To make sample applications, you must:

  1) TYPE ===> cd app; make "MACHINE=xxxx"   "COMM=yyyy"

     NOTE: Aztec uses both fortran and C subroutines. On some machines
     it is better to use fortran to link while on other machines it is
     better to use C to link. Thus, it may be necessary to edit app/Makefile
     and change the line
              MAIN_COMPILER   = $(CC)
           to
              MAIN_COMPILER   = $(FC)
     Additionally, the libraries such as -lf or -lF77 vary between machines.


  2) Other applications can be run by commenting and uncommenting
     the SRC_C and SRC_F line in app/Makefile.


------------------------------------------------------------------

If you wish to add a new machine, you must edit the makefiles and
add definitions for this machine. The most complicated of these are:

   1) the C/fortran compiling interface:
      - The syntax for linking Fortran and C subroutines
        differs slightly between machines. 'lib/az_aztec.h'
        contains macros corresponding to some common
        machines.

   2) the timing routine (md_timer_*.c)
      - There are a number of timing routines that are provided.
        md_timer_sun.c and md_timer_generic.c are the two most
        general. With any luck, one of these two will work
        on your machine.

   3) the communication function (md_wrap_*_c.c)

      Note: If you are using MPI, you must essentially tell AZTEC
      where both mpi.h and libmpi.a are located. For example,
      if mpi.h was located in /Net/hondo/mpi/include and
      libmpi.a was located in /Net/hondo/mpi/lib on your DEC machine,
      you would have

      CFLAGS_DEC      = -O2 -D$(COMM) -I/Net/hondo/mpi/include
      CLIB_MPI        = -L/Net/hondo/mpi/lib -lmpi


      in the makefiles.
